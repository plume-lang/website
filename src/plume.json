{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Plume",
	"patterns": [
    {
      "include": "#functions"
    },
    {
      "include": "#booleans"
    },
		{
			"include": "#keywords"
		},
    {
      "include": "#types"
    },
    {
      "include": "#identifiers"
    },
		{
			"include": "#strings"
		},
    {
      "include": "#numbers"
    },
    {
      "include": "#hexNumbers"
    },
    {
      "include": "#characters"
    },
    {
      "include": "#comments"
    }
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.plume",
				"match": "\\b(in|if|else|require|switch|fn|case|return|extend|native|type|infix|prefix|postfix|infixl|infixr|mut)\\b"
			}]
		},
    
    "functions": {
      "patterns": [
        {
          "match": "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*<(.*)>\\s*\\(",
          "comment": "Function definition with type parameters",
          "captures": {
            "1": {
              "name": "keyword.control.plume"
            },
            "2": {
              "name": "entity.name.function.plume"
            },
            "3": {
              "name": "entity.name.type.plume"
            }
          }
        },
        {
          "match": "\\b(fn)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "comment": "Function definition with type parameters",
          "captures": {
            "1": {
              "name": "keyword.control.plume"
            },
            "2": {
              "name": "entity.name.function.plume"
            }
          }
        }
      ]
    },

    "types": {
      "patterns": [{
        "name": "support.type.plume",
        "match": "\\b(int|str|bool|char|float|unit)\\b"
      }]
    },

    "identifiers": {
      "patterns": [
        {
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(\\()",
          "captures": {
            "1": {
              "name": "entity.name.function.plume"
            }
          }
        },
        {
          "name": "variable.name",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },

		"strings": {
			"name": "string.quoted.double.plume",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.plume",
					"match": "\\\\."
				}
			]
		},
    "numbers": {
      "name": "constant.numeric.plume",
      "match": "\\b(\\d+(\\.\\d+)?|\\.\\d+)\\b"
    },
    "hexNumbers": {
      "name": "constant.numeric.hex.plume",
      "match": "\\b0x[0-9a-fA-F]+\\b"
    },
    "booleans": {
      "name": "constant.language.plume",
      "match": "\\b(true|false)\\b"
    },
    "characters": {
      "name": "constant.character.plume",
      "match": "'.'"
    },

    "comments": {
      "patterns": [
        {
          "name": "comment.line.plume",
          "match": "//.*"
        },
        {
          "name": "comment.block.plume",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    }
	},
	"scopeName": "source.plume"
}